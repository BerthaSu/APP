
转----https://segmentfault.com/a/1190000008159069



根据用户需求验证APP的各个功能实现，以用户使用场景，对比说明或需求，整理出内在、外在及非功能直接相关的需求，构建测试点，并明确测试标准。根据被测功能点的特性列丼出相应类型的测试用例对其进行覆盖，。

在测试实现的各个阶段跟踪测试实现与需求输入的覆盖情况，及时修正业务或需求理解错误。

运行部分

1）APP安装完成后的试运行，可正常打开软件。

2）APP打开测试，是否有加载状态进度提示。

3）APP打开速度测试，速度是否可观。

4）APP页面间的切换是否流畅，逻辑是否正确

5）注册

--同表单编辑页面

--用户名密码长度

--注册后的提示页面

--前台注册页面和后台的管理页面数据是否一致

--注册后，在后台管理中页面提示

登录部分

--使用合法的用户登录系统。

--系统是否允许多次非法的登陆，是否有次数限制。

--使用已经登陆的账号登陆系统是否正确处理。

--使用禁用的账号登陆系统是否正确处理。

--用户名、口令（密码）错误或漏填时能否登陆。

--删除或修改后的用户，原用户登陆。

--不输入用户口令和用户、重复点（确定或取消按钮）是否允许登陆。

--登陆后，页面中登陆信息。

--页面中有注销按钮。

--登陆超时的处理。

注销部分

--注销原模块，新的模块系统能否正确处理。

--终止注销能否返回原模块，原用户。

--注销原用户，新用户系统能否正确处理。

--使用错误的账号、口令、无权限的被禁用的账号进行注销

切换部分

1) APP切换到后台，再回到APP，检查是否停留在上一次操作界面。

2) APP切换到后台，再回到APP，检查功能及应用状态是否正常，IOS4和IOS5的版本的处理机制有的不一样。

3) APP切换到后台，再回到前台时，注意程序是否崩溃，功能状态是否正常，尤其是对于从后台切换回前台数据有自动更新的时候。

4) 手机锁屏解屏后进入APP注意是否会崩溃，功能状态是否正常，尤其是对于从后台切换回前台数据有自动更新的时候。

5) 当APP使用过程中有电话进来中断后再切换到APP，功能状态是否正常

6) 当杀掉APP进程后，再开启APP，APP能否正常启动。

7) 出现必须处理的提示框后，切换到后台，再切换回来，检查提示框是否还存在，有时候会出现应用自动跳过提示框的缺陷。

8) 对于有数据交换的页面，每个页面都必需要进行前后台切换、锁屏的测试，这种页面最容易出现崩溃。

免登录部分

很多应用提供免登录功能，当应用开启时自动以上一次登录的用户身份来使用APP.

1) APP有免登录功能时，需要考虑IOS版本差异。

2) 考虑无网络情况时能否正常进入免登录状态。

3) 切换用户登录后，要校验用户登录信息及数据内容是否相应更新，确保原用户退出。

4) 根据MTOP的现有规则，一个帐户只允许登录一台机器。所以，需要检查一个帐户登录多台手机的情况。原手机里的用户需要被踢出，给出友好提示。

5) APP切换到后台，再切回前台的校验

6) 切换到后台，再切换回前台的测试

7) 密码更换后，检查有数据交换时是否进行了有效身份的校验

8) 支持自动登录的应用在进行数据交换时，检查系统是否能自动登录成功并且数据操作无误。

9) 检查用户主动退出登录后，下次启动APP，应停留在登录界面

数据更新部分

根据应用的业务规则，以及数据更新量的情况，来确定最优的数据更新方案。

1) 需要确定哪些地方需要提供手动刷新，哪些地方需要自动刷新，哪些地方需要手动+自动刷新。

2) 确定哪些地方从后台切换回前台时需要进行数据更新。

3) 根据业务、速度及流量的合理分配，确定哪些内容需要实时更新，哪些需要定时更新。

4) 确定数据展示部分的处理逻辑，是每次从服务端请求，还是有缓存到本地，这样才能有针对性的进行相应测试。

5) 检查有数据交换的地方，均有相应的异常处理。

APP更新部分

1) 当客户端有新版本时，有更新提示。

2) 当版本为非强制升级版时，用户可以取消更新，老版本能正常使用。用户在下次启动APP时，仍能出现更新提示。

3) 当版本为强制升级版时，当给出强制更新后用户没有做更新时，退出客户端。下次启动APP时，仍出现强制升级提示。

4) 当客户端有新版本时，在本地不删除客户端的情况下，直接更新检查是否能正常更新。

5) 当客户端有新版本时，在本地不删除客户端的情况下，检查更新后的客户端功能是否是新版本。

6) 当客户端有新版本时，在本地不删除客户端的情况下，检查资源同名文件如图片是否能正常更新成最新版本。如果以上无法更新成功的，也都属于缺陷。

以上是APP功能测试流程的基础部分，具体的各个功能点的测试就要看，被测试的APP的具体功能才能设计满足需求的测试用例流程。在APP测试中功能方面一向是最复杂的工作，几千条用例不在少数。
